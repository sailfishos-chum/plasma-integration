From dc1ede7a040c0b736381c7dc33da1b085c595c7a Mon Sep 17 00:00:00 2001
From: Rinigus <rinigus.git@gmail.com>
Date: Sat, 29 Apr 2023 14:27:07 +0300
Subject: [PATCH] Allow to use without X11 libs

---
 CMakeLists.txt                          | 11 ++++-------
 cmake/modules/FindQt5ThemeSupport.cmake | 16 +++-------------
 src/platformtheme/CMakeLists.txt        | 10 +++-------
 src/platformtheme/kdeplatformtheme.cpp  |  7 +++++++
 src/platformtheme/kdeplatformtheme.h    |  4 ++++
 5 files changed, 21 insertions(+), 27 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1dc3eb1..15b1b25 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,9 +22,6 @@ include(ECMDeprecationSettings)
 
 find_package(Qt${QT_MAJOR_VERSION} ${QT_MIN_VERSION} CONFIG REQUIRED Widgets DBus QuickControls2 WaylandClient)
 find_package(Qt${QT_MAJOR_VERSION}Gui ${QT_MIN_VERSION} CONFIG REQUIRED Private)
-if (QT_MAJOR_VERSION EQUAL "5")
-    find_package(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED X11Extras)
-endif()
 
 find_package(KF5 ${KF5_MIN_VERSION} REQUIRED COMPONENTS
                 Config ConfigWidgets I18n IconThemes KIO Notifications
@@ -41,13 +38,13 @@ find_package(XCB COMPONENTS XCB)
 set_package_properties(XCB PROPERTIES
     DESCRIPTION "X protocol C-language Binding"
     URL "https://xcb.freedesktop.org"
-    TYPE REQUIRED
+    TYPE
     PURPOSE "Required to pass style properties to native Windows on X11 Platform"
 )
 
 find_package(Breeze 5 CONFIG)
 set_package_properties(Breeze PROPERTIES
-                       TYPE REQUIRED
+                       TYPE
                        PURPOSE "For setting the default QStyle name")
 
 # dependencies for QPA plugin
@@ -66,8 +63,8 @@ if (IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/po")
     ki18n_install(po)
 endif()
 add_subdirectory(src)
-add_subdirectory(autotests)
-add_subdirectory(tests)
+#add_subdirectory(autotests)
+#add_subdirectory(tests)
 
 find_package(FontNotoSans)
 set_package_properties(FontNotoSans PROPERTIES
diff --git a/cmake/modules/FindQt5ThemeSupport.cmake b/cmake/modules/FindQt5ThemeSupport.cmake
index d5861fa..9dc6f2f 100644
--- a/cmake/modules/FindQt5ThemeSupport.cmake
+++ b/cmake/modules/FindQt5ThemeSupport.cmake
@@ -47,17 +47,8 @@ endif()
 # Use pkg-config to get the directories and then use these values
 # in the FIND_PATH() and FIND_LIBRARY() calls
 find_package(PkgConfig)
-pkg_check_modules(PKG_Qt5ThemeSupport QUIET Qt5Gui)
+find_package(Qt${QT_MAJOR_VERSION} ${QT_MIN_VERSION} CONFIG REQUIRED ThemeSupport)
 
-set(Qt5ThemeSupport_DEFINITIONS ${PKG_Qt5ThemeSupport_CFLAGS_OTHER})
-set(Qt5ThemeSupport_VERSION ${PKG_Qt5ThemeSupport_VERSION})
-
-find_path(Qt5ThemeSupport_INCLUDE_DIR
-    NAMES
-        QtThemeSupport/private/qgenericunixthemes_p.h
-    HINTS
-        ${PKG_Qt5ThemeSupport_INCLUDEDIR}/QtThemeSupport/${PKG_Qt5ThemeSupport_VERSION}/
-)
 find_library(Qt5ThemeSupport_LIBRARY
     NAMES
         Qt5ThemeSupport
@@ -71,7 +62,7 @@ find_package_handle_standard_args(Qt5ThemeSupport
         Qt5ThemeSupport_FOUND
     REQUIRED_VARS
         Qt5ThemeSupport_LIBRARY
-        Qt5ThemeSupport_INCLUDE_DIR
+        Qt5ThemeSupport_PRIVATE_INCLUDE_DIRS
     VERSION_VAR
         Qt5ThemeSupport_VERSION
 )
@@ -81,7 +72,7 @@ if(Qt5ThemeSupport_FOUND AND NOT TARGET Qt5ThemeSupport::Qt5ThemeSupport)
     set_target_properties(Qt5ThemeSupport::Qt5ThemeSupport PROPERTIES
         IMPORTED_LOCATION "${Qt5ThemeSupport_LIBRARY}"
         INTERFACE_COMPILE_OPTIONS "${Qt5ThemeSupport_DEFINITIONS}"
-        INTERFACE_INCLUDE_DIRECTORIES "${Qt5ThemeSupport_INCLUDE_DIR}"
+        INTERFACE_INCLUDE_DIRECTORIES "${Qt5ThemeSupport_PRIVATE_INCLUDE_DIRS}"
     )
 endif()
 
@@ -89,7 +80,6 @@ mark_as_advanced(Qt5ThemeSupport_LIBRARY Qt5ThemeSupport_INCLUDE_DIR)
 
 # compatibility variables
 set(Qt5ThemeSupport_LIBRARIES ${Qt5ThemeSupport_LIBRARY})
-set(Qt5ThemeSupport_INCLUDE_DIRS ${Qt5ThemeSupport_INCLUDE_DIR})
 set(Qt5ThemeSupport_VERSION_STRING ${Qt5ThemeSupport_VERSION})
 
 
diff --git a/src/platformtheme/CMakeLists.txt b/src/platformtheme/CMakeLists.txt
index ac9e5f8..be4c047 100644
--- a/src/platformtheme/CMakeLists.txt
+++ b/src/platformtheme/CMakeLists.txt
@@ -1,7 +1,7 @@
 find_package(X11)
 set_package_properties(X11 PROPERTIES DESCRIPTION "Required for updating the Cursor theme on X11"
                         URL "https://www.x.org"
-                        TYPE REQUIRED
+                        TYPE
                         )
 set(HAVE_X11 ${X11_FOUND})
 if(HAVE_X11)
@@ -28,7 +28,7 @@ set(platformtheme_SRCS
     kfiletreeview.cpp
     kdirselectdialog.cpp
     kwaylandintegration.cpp
-    x11integration.cpp
+    #x11integration.cpp
     main.cpp
     qxdgdesktopportalfiledialog.cpp
     qtquickrenderersettings.cpp
@@ -74,18 +74,14 @@ target_link_libraries(KDEPlasmaPlatformTheme
         KF5::I18n
         KF5::Notifications
         KF5::WindowSystem
-        XCB::XCB
         ${QT5PLATFORMSUPPORT_LIBS}
         Qt::WaylandClient
         Qt::GuiPrivate
         Wayland::Client
 )
-if (QT_MAJOR_VERSION EQUAL "5")
-    target_link_libraries(KDEPlasmaPlatformTheme PRIVATE Qt5::X11Extras)
-endif()
 
 if(HAVE_X11)
-  target_link_libraries(KDEPlasmaPlatformTheme PRIVATE ${X11_Xcursor_LIB} ${XCB_XCB_LIBRARY})
+  target_link_libraries(KDEPlasmaPlatformTheme PRIVATE XCB::XCB ${X11_Xcursor_LIB} ${XCB_XCB_LIBRARY})
 endif()
 
 set_target_properties(KDEPlasmaPlatformTheme PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/platformthemes/")
diff --git a/src/platformtheme/kdeplatformtheme.cpp b/src/platformtheme/kdeplatformtheme.cpp
index b24ee9f..2325f13 100644
--- a/src/platformtheme/kdeplatformtheme.cpp
+++ b/src/platformtheme/kdeplatformtheme.cpp
@@ -14,7 +14,10 @@
 #include "kfontsettingsdata.h"
 #include "khintssettings.h"
 #include "kwaylandintegration.h"
+
+#if HAVE_X11
 #include "x11integration.h"
+#endif
 
 #include <QApplication>
 #include <QDBusConnection>
@@ -37,8 +40,10 @@
 #include "qdbusmenubar_p.h"
 #include "qxdgdesktopportalfiledialog_p.h"
 
+#if HAVE_X11
 static const QByteArray s_x11AppMenuServiceNamePropertyName = QByteArrayLiteral("_KDE_NET_WM_APPMENU_SERVICE_NAME");
 static const QByteArray s_x11AppMenuObjectPathPropertyName = QByteArrayLiteral("_KDE_NET_WM_APPMENU_OBJECT_PATH");
+#endif
 
 static bool checkDBusGlobalMenuAvailable()
 {
@@ -445,10 +450,12 @@ void KdePlatformTheme::setMenuBarForWindow(QWindow *window, const QString &servi
     if (!window)
         return;
 
+#if HAVE_X11
     if (m_x11Integration) {
         m_x11Integration->setWindowProperty(window, s_x11AppMenuServiceNamePropertyName, serviceName.toUtf8());
         m_x11Integration->setWindowProperty(window, s_x11AppMenuObjectPathPropertyName, objectPath.toUtf8());
     }
+#endif
 
     if (m_kwaylandIntegration) {
         m_kwaylandIntegration->setAppMenu(window, serviceName, objectPath);
diff --git a/src/platformtheme/kdeplatformtheme.h b/src/platformtheme/kdeplatformtheme.h
index 13072c1..f645e44 100644
--- a/src/platformtheme/kdeplatformtheme.h
+++ b/src/platformtheme/kdeplatformtheme.h
@@ -15,7 +15,9 @@
 class KHintsSettings;
 class KFontSettingsData;
 class KWaylandIntegration;
+#if HAVE_X11
 class X11Integration;
+#endif
 class QIconEngine;
 class QWindow;
 
@@ -58,7 +60,9 @@ private:
     KHintsSettings *m_hints = nullptr;
     KFontSettingsData *m_fontsData = nullptr;
     QScopedPointer<KWaylandIntegration> m_kwaylandIntegration;
+#if HAVE_X11
     QScopedPointer<X11Integration> m_x11Integration;
+#endif
 };
 
 #endif // KDEPLATFORMTHEME_H
-- 
2.39.2

